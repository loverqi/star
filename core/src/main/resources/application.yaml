spring:
  profiles:
      active: star
  aop:
    proxy-target-class: true

  thymeleaf:
    prefix: classpath:/templates/  
    suffix: .html  
    mode: HTML5  
    encoding: UTF-8  
    content-type: text/html   
    cache: false 
    
  #数据库访问配置  #mysql
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver

    # 初始化大小，最小，最大  
    initialSize: 1  
    minIdle: 3  
    maxActive: 20  
    # 配置获取连接等待超时的时间  
    maxWait: 60000  
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  
    timeBetweenEvictionRunsMillis: 60000  
    # 配置一个连接在池中最小生存的时间，单位是毫秒  
    minEvictableIdleTimeMillis: 30000  
    validationQuery: select 'loverqi'
    testWhileIdle: true  
    testOnBorrow: false  
    testOnReturn: false  
    # 打开PSCache，并且指定每个连接上PSCache的大小  
    poolPreparedStatements: true  
    maxPoolPreparedStatementPerConnectionSize: 20  
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙  
    filters: stat,wall,slf4j  
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录  
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000  
    # 合并多个DruidDataSource的监控数据  
    #useGlobalDataSourceStat: true  

  # Srping Session
  session:  
    store-type: redis 
    redis:
        flush-mode: on-save
        namespace: 
  
  #redis缓存数据库的配置
  redis:  
     database: 0
     pool:  
         max-active: 8  
         max-wait: -1 
         max-idle: 8  
         min-idle: 0  
         shutdown-timeout: 0
  
# 服务的基本配置
server:
  port: 80
  session:
    timeout: 1800
  # 关闭默认的错误处理
  error:  
    whitelabel:  
      enabled: false  
    
#开启mybatis驼峰命名和下划线命名的自动转换
mybatis:
  configuration:
    map-underscore-to-camel-case: true
    call-setters-on-nulls: true

# pagehelper的配置
pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql

#开发环境下开启 DEBUG 模式
#logging:
#  level:
#    org:
#      springframework: DEBUG

